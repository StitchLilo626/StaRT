


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ; File: arm.s
    3 00000000         ; Brief: Cortex-M3 context switch & IRQ primitives (Pend
                       SV + PRIMASK helpers)
    4 00000000         ; Version: 1.0.2
    5 00000000         ; Date: 2025-08-26
    6 00000000         ; Author: StitchLilo626
    7 00000000         ; History:
    8 00000000         ;   2025-08-26 1.0.2 Translate Chinese comments to Engli
                       sh (kept structure).
    9 00000000         ;-------------------------------------------------------
                       -----------------------
   10 00000000         
   11 00000000                 IMPORT           s_prev_thread_sp_p
   12 00000000                 IMPORT           s_next_thread_sp_p
   13 00000000                 IMPORT           s_interrupt_flag
   14 00000000         
   15 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   16 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04
   17 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20
   18 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000
   19 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000
   20 00000000         
   21 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   22 00000000                 THUMB
   23 00000000                 REQUIRE8
   24 00000000                 PRESERVE8
   25 00000000         
   26 00000000         ; s_uint32_t s_irq_disable(void);
   27 00000000         s_irq_disable
                               PROC
   28 00000000                 EXPORT           s_irq_disable
   29 00000000 F3EF 8010       MRS              r0, PRIMASK ; save current PRIM
                                                            ASK
   30 00000004 B672            CPSID            I           ; disable IRQ
   31 00000006 4770            BX               LR
   32 00000008                 ENDP
   33 00000008         
   34 00000008         ; void s_irq_enable(s_uint32_t disirq);
   35 00000008         s_irq_enable
                               PROC
   36 00000008                 EXPORT           s_irq_enable
   37 00000008 F380 8810       MSR              PRIMASK, r0 ; restore PRIMASK
   38 0000000C 4770            BX               LR
   39 0000000E                 ENDP
   40 0000000E         
   41 0000000E         ; void s_first_switch_task(uint32_t to);



ARM Macro Assembler    Page 2 


   42 0000000E         ; First switch: no previous thread stack to save.
   43 0000000E         s_first_switch_task
                               PROC
   44 0000000E                 EXPORT           s_first_switch_task
   45 0000000E         
   46 0000000E 4923            LDR              r1, =s_next_thread_sp_p
   47 00000010 6008            STR              r0, [r1]    ; store 'to' PSP po
                                                            inter container
   48 00000012         
   49 00000012 4923            LDR              r1, =s_prev_thread_sp_p
   50 00000014 F04F 0000       MOV              r0, #0
   51 00000018 6008            STR              r0, [r1]    ; mark no previous
   52 0000001A         
   53 0000001A 4922            LDR              r1, =s_interrupt_flag
   54 0000001C F04F 0001       MOV              r0, #1
   55 00000020 6008            STR              r0, [r1]    ; set switch flag
   56 00000022         
   57 00000022 4821            LDR              r0, =NVIC_SYSPRI2
   58 00000024 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   59 00000028 F8D0 2000       LDR.W            r2, [r0,#0x00]
   60 0000002C EA41 0102       ORR              r1, r1, r2
   61 00000030 6001            STR              r1, [r0]    ; set PendSV lowest
                                                             priority
   62 00000032         
   63 00000032 481E            LDR              r0, =NVIC_INT_CTRL
   64 00000034 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   65 00000038 6001            STR              r1, [r0]    ; trigger PendSV
   66 0000003A         
   67 0000003A B661            CPSIE            F
   68 0000003C B662            CPSIE            I
   69 0000003E                 ENDP
   70 0000003E         
   71 0000003E         ; void s_normal_switch_task(uint32_t from, uint32_t to);
                       
   72 0000003E         s_normal_switch_task
                               PROC
   73 0000003E                 EXPORT           s_normal_switch_task
   74 0000003E         
   75 0000003E 4A19            LDR              r2, =s_interrupt_flag
   76 00000040 6813            LDR              r3, [r2]
   77 00000042 2B01            CMP              r3, #1
   78 00000044 D004            BEQ              _reswitch
   79 00000046 F04F 0301       MOV              r3, #1
   80 0000004A 6013            STR              r3, [r2]    ; set flag first ti
                                                            me
   81 0000004C         
   82 0000004C 4A14            LDR              r2, =s_prev_thread_sp_p
   83 0000004E 6010            STR              r0, [r2]    ; save prev PSP sto
                                                            rage address
   84 00000050         
   85 00000050         _reswitch
   86 00000050 4A12            LDR              r2, =s_next_thread_sp_p
   87 00000052 6011            STR              r1, [r2]    ; store next PSP st
                                                            orage address
   88 00000054         
   89 00000054 4815            LDR              r0, =NVIC_INT_CTRL
   90 00000056 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   91 0000005A 6001            STR              r1, [r0]    ; pend PendSV
   92 0000005C         



ARM Macro Assembler    Page 3 


   93 0000005C 4770            BX               LR
   94 0000005E                 ENDP
   95 0000005E         
   96 0000005E         ; PendSV_Handler: performs context save/restore using PS
                       P
   97 0000005E         PendSV_Handler
                               PROC
   98 0000005E                 EXPORT           PendSV_Handler
   99 0000005E         
  100 0000005E F3EF 8210       MRS              r2, PRIMASK
  101 00000062 B672            CPSID            I
  102 00000064         
  103 00000064 480F            LDR              r0, =s_interrupt_flag
  104 00000066 6801            LDR              r1, [r0]
  105 00000068 B191            CBZ              r1, pendsv_exit
  106 0000006A F04F 0100       MOV              r1, #0
  107 0000006E 6001            STR              r1, [r0]
  108 00000070         
  109 00000070 480B            LDR              r0, =s_prev_thread_sp_p
  110 00000072 6801            LDR              r1, [r0]
  111 00000074 B129            CBZ              r1, switch_to_thread
  112 00000076         
  113 00000076         ; Save callee-saved registers r4-r11 onto old thread sta
                       ck
  114 00000076 F3EF 8109       MRS              r1, psp
  115 0000007A E921 0FF0       STMFD            r1!, {r4 - r11}
  116 0000007E 6800            LDR              r0, [r0]
  117 00000080 6001            STR              r1, [r0]
  118 00000082         
  119 00000082         switch_to_thread
  120 00000082 4906            LDR              r1, =s_next_thread_sp_p
  121 00000084 6809            LDR              r1, [r1]
  122 00000086 6809            LDR              r1, [r1]
  123 00000088         
  124 00000088 E8B1 0FF0       LDMFD            r1!, {r4 - r11} ; restore calle
                                                            e-saved
  125 0000008C F381 8809       MSR              psp, r1
  126 00000090         
  127 00000090         pendsv_exit
  128 00000090 F382 8810       MSR              PRIMASK, r2
  129 00000094 F04E 0E04       ORR              lr, lr, #0x04
  130 00000098 4770            BX               lr
  131 0000009A                 ENDP
  132 0000009A         
  133 0000009A 00 00           ALIGN            4
  134 0000009C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=start-stm32f103c8\arm.d -ostart-stm32f103c8\arm.o -I.\RTE\_StaRT -
ID:\Users\Stitch\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -ID
:\Users\Stitch\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include 
--predefine="__UVISION_VERSION SETA 539" --predefine="_RTE_ SETA 1" --predefine
="STM32F10X_MD SETA 1" --predefine="_RTE_ SETA 1" --list=arm.lst ..\..\..\..\li
bcpu\CM3\arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 21 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      None
Comment: .text unused
PendSV_Handler 0000005E

Symbol: PendSV_Handler
   Definitions
      At line 97 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 98 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: PendSV_Handler used once
_reswitch 00000050

Symbol: _reswitch
   Definitions
      At line 85 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 78 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: _reswitch used once
pendsv_exit 00000090

Symbol: pendsv_exit
   Definitions
      At line 127 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 105 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: pendsv_exit used once
s_first_switch_task 0000000E

Symbol: s_first_switch_task
   Definitions
      At line 43 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 44 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: s_first_switch_task used once
s_irq_disable 00000000

Symbol: s_irq_disable
   Definitions
      At line 27 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 28 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: s_irq_disable used once
s_irq_enable 00000008

Symbol: s_irq_enable
   Definitions
      At line 35 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 36 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: s_irq_enable used once
s_normal_switch_task 0000003E

Symbol: s_normal_switch_task



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 72 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 73 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: s_normal_switch_task used once
switch_to_thread 00000082

Symbol: switch_to_thread
   Definitions
      At line 119 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 111 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: switch_to_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 16 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 63 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 89 in file ..\..\..\..\libcpu\CM3\arm.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 19 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 64 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 90 in file ..\..\..\..\libcpu\CM3\arm.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 18 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 58 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 17 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 57 in file ..\..\..\..\libcpu\CM3\arm.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 15 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

s_interrupt_flag 00000000

Symbol: s_interrupt_flag
   Definitions
      At line 13 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 53 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 75 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 103 in file ..\..\..\..\libcpu\CM3\arm.s

s_next_thread_sp_p 00000000

Symbol: s_next_thread_sp_p
   Definitions
      At line 12 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 46 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 86 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 120 in file ..\..\..\..\libcpu\CM3\arm.s

s_prev_thread_sp_p 00000000

Symbol: s_prev_thread_sp_p
   Definitions
      At line 11 in file ..\..\..\..\libcpu\CM3\arm.s
   Uses
      At line 49 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 82 in file ..\..\..\..\libcpu\CM3\arm.s
      At line 109 in file ..\..\..\..\libcpu\CM3\arm.s

3 symbols
352 symbols in table
